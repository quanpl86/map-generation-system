{
  "topic_code": "TOPIC_02_FUNCTIONS",
  "topic_name": "Hàm",
  "suggested_maps": [
    {
      "id": "topic02-req01-island-decomposition",
      "level": 1,
      "titleKey": "Challenge.T2.C1.L1.Title",
      "descriptionKey": "Challenge.T2.C1.L1.Description",
      "translations": {
        "vi": {
          "Challenge.T2.C1.L1.Title": "Phân rã vấn đề",
          "Challenge.T2.C1.L1.Description": "Mô tả: Có hai hòn đảo giống hệt nhau. Hãy tạo một hàm để xử lý một hòn đảo, sau đó gọi nó hai lần.\\nMục tiêu: Học cách tạo và gọi hàm để tái sử dụng code."
        },
        "en": {
          "Challenge.T2.C1.L1.Title": "Problem Decomposition",
          "Challenge.T2.C1.L1.Description": "Description: There are two identical islands. Create a function to solve one island, then call it twice.\\nGoal: Learn to create and call functions for code reuse."
        }
      },
      "generation_config": {
        "map_type": "symmetrical_islands",
        "logic_type": "function_decomposition",
        "num_variants": 3,
        "params": { "num_islands": [2, 3] }
      },
      "blockly_config": { "toolbox_preset": "functions_basic", "start_blocks": "" },
      "solution_config": { "type": "reach_target" }
    },
    {
      "id": "topic02-req02-refactor-square",
      "level": 2,
      "titleKey": "Challenge.T2.C1.L2.Title",
      "descriptionKey": "Challenge.T2.C1.L2.Description",
      "translations": {
        "vi": {
          "Challenge.T2.C1.L2.Title": "Tái cấu trúc Code",
          "Challenge.T2.C1.L2.Description": "Mô tả: Chương trình này đã hoạt động, nhưng nó quá dài. Hãy tạo một hàm `drawOneSide` để làm cho chương trình chính trở nên ngắn gọn hơn.\\nMục tiêu: Thực hành kỹ năng tái cấu trúc code lặp lại."
        },
        "en": {
          "Challenge.T2.C1.L2.Title": "Code Refactoring",
          "Challenge.T2.C1.L2.Description": "Description: This program works, but it's too long. Create a `drawOneSide` function to make the main program shorter.\\nGoal: Practice refactoring repetitive code."
        }
      },
      "generation_config": {
        "map_type": "square_shape",
        "logic_type": "for_loop_complex",
        "num_variants": 2,
        "params": { "side_length": 4 }
      },
      "blockly_config": {
        "toolbox_preset": "functions_basic",
        "start_blocks": "<xml><block type=\"maze_moveForward\"></block><block type=\"maze_moveForward\"></block><block type=\"maze_moveForward\"></block><block type=\"maze_moveForward\"></block><block type=\"maze_turn\"><field name=\"DIR\">turnLeft</field></block><block type=\"maze_moveForward\"></block><block type=\"maze_moveForward\"></block><block type=\"maze_moveForward\"></block><block type=\"maze_moveForward\"></block><block type=\"maze_turn\"><field name=\"DIR\">turnLeft</field></block></xml>"
      },
      "solution_config": { "type": "reach_target" }
    },
    {
      "id": "topic02-req03-function-with-param",
      "level": 3,
      "titleKey": "Challenge.T2.C1.L3.Title",
      "descriptionKey": "Challenge.T2.C1.L3.Description",
      "translations": {
        "vi": {
          "Challenge.T2.C1.L3.Title": "Hàm với Tham số",
          "Challenge.T2.C1.L3.Description": "Mô tả: Các cây cầu có độ dài khác nhau. Hãy tạo một hàm `walk(steps)` có thể nhận một con số làm tham số để đi qua chúng.\\nMục tiêu: Học cách tạo và sử dụng hàm có tham số."
        },
        "en": {
          "Challenge.T2.C1.L3.Title": "Function with a Parameter",
          "Challenge.T2.C1.L3.Description": "Description: The bridges have different lengths. Create a `walk(steps)` function that can take a number as a parameter to cross them.\\nGoal: Learn to create and use functions with parameters."
        }
      },
      "generation_config": {
        "map_type": "variable_length_sides",
        "logic_type": "function_with_params",
        "num_variants": 3,
        "params": { "path_length": [3, 6] }
      },
      "blockly_config": {
        "toolbox_preset": "full_toolbox",
        "start_blocks": ""
      },
      "solution_config": { "type": "reach_target" }
    }
  ]
}